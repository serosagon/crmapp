'@type': "SoftwareComponentType"
createdDate: "2018-10-10T05:07:39.180Z"
lastUpdated: "2018-10-11T05:55:46.775Z"
id: "Software.DemoAppWeb"
name: "Demo App Web"
description: "Installs and configures the Demo App Web (Reverse Proxy) Server"
publishStatus: "PUBLISHED"
publishStatusName: "Published"
schema:
  fields:
  - id: "web_server_name"
    label: "web_server_name"
    description: "FQDN or IP of the Web Server"
    dataType:
      type: "primitive"
      typeId: "STRING"
    state:
      dependencies: []
      facets:
      - type: "defaultValue"
        value:
          type: "constant"
          value:
            type: "string"
            value: ""
    isMultiValued: false
  - id: "host"
    label: "Container"
    description: ""
    dataType:
      type: "ref"
      componentTypeId: "com.vmware.csp.iaas.blueprint.service"
      classId: "Infrastructure.Machine.Schema"
      label: "Machine"
    state:
      dependencies: []
      facets:
      - type: "visible"
        value:
          type: "constantClause"
          value:
            type: "boolean"
            value: false
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
      - type: "internal"
        value:
          type: "constantClause"
          value:
            type: "boolean"
            value: true
    isMultiValued: false
  - id: "app_server_name"
    label: "app_server_name"
    description: "FQDN or IP of the Application Server"
    dataType:
      type: "primitive"
      typeId: "STRING"
    state:
      dependencies: []
      facets:
      - type: "defaultValue"
        value:
          type: "constant"
          value:
            type: "string"
            value: ""
    isMultiValued: false
containerFieldId: "host"
lifecycleTasks:
- createdDate: "2018-10-10T05:07:39.181Z"
  lastUpdated: "2018-10-11T09:35:21.025Z"
  script:
    scriptContent: "#!/bin/bash\n# Add epel-release\n/usr/bin/yum -y install epel-release\n\
      # Install nginx\n/usr/bin/yum -y install nginx"
    isRebootAfter: false
    scriptTypeId: "Bash"
  taskDescriptorRef:
    id: "INSTALL"
    label: "Install"
- createdDate: "2018-10-10T05:07:39.181Z"
  lastUpdated: "2018-10-11T09:35:21.025Z"
  script:
    scriptContent: "#!/bin/bash\n# Download the reverse proxy configuration\nexport\
      \ PATH=$PATH:/usr/local/sbin:/usr/sbin:/sbin:/root/bin\n#/usr/bin/wget -O /etc/nginx/conf.d/proxy.conf\
      \ https://raw.githubusercontent.com/sammcgeown/vRA-3-Tier-Application/master/app/proxy.nginx.conf\n\
      /usr/bin/wget -O /etc/nginx/conf.d/proxy.conf https://raw.githubusercontent.com/sammcgeown/vRA-3-Tier-Application/master/config/proxy.nginx.conf\n\
      #/usr/bin/sed -i \"s@SERVERNAME@$web_server_name@\" /etc/nginx/conf.d/proxy.conf\n\
      #/usr/bin/sed -i \"s@APPTIER@$app_server_name@\" /etc/nginx/conf.d/proxy.conf\n\
      /bin/sed -i \"s@SERVERNAME@$web_server_name@\" /etc/nginx/conf.d/proxy.conf\n\
      /bin/sed -i \"s@APPTIER@$app_server_name@\" /etc/nginx/conf.d/proxy.conf\n#\
      \ Create the SSL folder\n#/usr/bin/mkdir /etc/nginx/ssl\n/bin/mkdir /etc/nginx/ssl\n\
      # Download the proxy SSL conf\n#/usr/bin/wget -O /etc/nginx/ssl/proxy.conf https://raw.githubusercontent.com/sammcgeown/vRA-3-Tier-Application/master/app/proxy.ssl.conf\n\
      /usr/bin/wget -O /etc/nginx/ssl/proxy.conf https://raw.githubusercontent.com/sammcgeown/vRA-3-Tier-Application/master/config/proxy.ssl.conf\n\
      #/usr/bin/sed -i \"s@WEBSERVERNAME@$web_server_name@\" /etc/nginx/ssl/proxy.conf\n\
      /bin/sed -i \"s@WEBSERVERNAME@$web_server_name@\" /etc/nginx/ssl/proxy.conf\n\
      # Generate SSL keys\n/usr/bin/openssl req -x509 -nodes -days 1825 -newkey rsa:2048\
      \ -keyout /etc/nginx/ssl/proxy.key -out /etc/nginx/ssl/proxy.pem -config /etc/nginx/ssl/proxy.conf\n\
      # Open http firewall for remote connections\n#/usr/bin/firewall-cmd --permanent\
      \ --zone=public --add-service=https\n#/usr/bin/firewall-cmd --reload\n# Configure\
      \ SELinux\n#/usr/sbin/setsebool -P httpd_can_network_connect true\n# Start and\
      \ enable nginx\n#/usr/bin/systemctl start nginx\n#/usr/bin/systemctl enable\
      \ nginx\nservice nginx start"
    isRebootAfter: false
    scriptTypeId: "Bash"
  taskDescriptorRef:
    id: "CONFIGURE"
    label: "Configure"
